{% extends 'base.html.twig' %}

{% block title %}Calendrier{% endblock %}

{% block body %}
	<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/fullcalendar@5.7.0/main.min.css" integrity="sha256-r2s/dK+UgUBU0+4kDK93RVTOO5qbzD+XIRJDOxKlTFM=" crossorigin="anonymous">
	<link href='https://cdn.jsdelivr.net/npm/bootstrap@4.5.0/dist/css/bootstrap.css' rel='stylesheet' />
	<link href='https://cdn.jsdelivr.net/npm/@fortawesome/fontawesome-free@5.13.1/css/all.css' rel='stylesheet'>
	<link rel="stylesheet" type="text/css" href="{{ asset('assets/css/style.css') }}">
	<section id="about" class="padding">
		<div class="container aboutus">
			<div class="row">
				<div class="col-md-7 wow fadeInLeft" data-wow-delay="300ms">
					<h2 class="heading heading_space"><span>Calendrier des </span>évènements <span class="divider-left"></span></h2>
				</div>
			</div>
			<div class="margin10">
				<div class="widget heading_space">
					<div class="container">
						<div id="calendrier"></div>
					</div>
					<div class="row" style="column-gap: 10px">
						{% if is_granted("ROLE_DELEGATE") or is_granted("ROLE_SPEAKER") %}
						<a class="btn_common btn_border margin10 border_radius" href="{{ path('calendar_new') }}">
							Créer un évènement
						</a>
						{% endif %}
						<a class="btn_common btn_border margin10 border_radius" href="{{ path('home') }}">
							Retour
						</a>
					</div>
				</div>
			</div>
		</div>
	</section>
{% endblock %}
{% block javascripts %}
	<script>
		document.addEventListener('DOMContentLoaded', function() {
			let calendarElt = document.getElementById('calendrier');
			let xhr = new XMLHttpRequest();

			let calendar = new FullCalendar.Calendar(calendarElt, {
				themeSystem: 'bootstrap',
				initialView: 'timeGridWeek',
				locale: 'fr',
				timeZone : 'Europe/Paris',
				headerToolbar: {
					start: 'prev,next today',
					center: 'title',
					end: 'dayGridMonth,timeGridWeek'
				},
				slotMinTime: "07:00:00",
				slotMaxTime: "19:00:00",
				events: {{ data|raw }},
				{% if is_granted('ROLE_DELEGATE') or  is_granted('ROLE_SPEAKER') %}
					editable: true,
					eventResizableFromStart: true,
					eventDurationEditable: true,
				{% endif %}

			});

			calendar.on('eventChange', (e) => {
				let url = `event/${e.event.id}/edit`
				let data = {
					"title": e.event.title,
					"description": e.event.extendedProps.description,
					"start": e.event.start,
					"end": e.event.end,
					"allDay": e.event.allDay,
					"backgroundColor": e.event.extendedProps.background_color,
					"borderColor": e.event.extendedProps.border_color,
					"textColor": e.event.extendedProps.text_color,
				}

				xhr.open("PUT", url);
				xhr.send(JSON.stringify(data));

			});

			calendar.on('eventClick', (e) => {
				let url;
				{% if is_granted('ROLE_DELEGATE') or  is_granted('ROLE_SPEAKER') %}
					url = `${e.event.id}/edit`;
				{% else %}
					url = `${e.event.id}`
				{% endif %}

				window.location.href = url;
			});

			calendar.render();
		});
	</script>
{% endblock %}
